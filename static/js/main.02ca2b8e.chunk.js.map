{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/ListItem.js","components/List.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","autoComplete","onSubmit","e","preventDefault","name","isCompleted","type","id","required","placeholder","onChange","target","toLowerCase","className","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","onClick","handleSave","htmlFor","checked","disabled","List","switchComplete","newTodos","forEach","element","i","editvalue","map","Footer","checkAll","setCheckAll","length","filter","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02ca2b8e.chunk.js","sourcesContent":["import React,{useState,useEffect,createContext} from 'react'\r\nexport const DataContext = createContext();\r\nexport const DataProvider = (props) => {\r\n  const [todos, setTodos] = useState([])\r\n  //getting data from localStorage\r\n  useEffect(() => {\r\n    const todoStore = JSON.parse(localStorage.getItem('todoStorage'))\r\n    if(todoStore) setTodos(todoStore)\r\n  }, [])\r\n  //storing data in localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('todoStorage',JSON.stringify(todos))\r\n  }, [todos])\r\n  \r\n  return (\r\n      <DataContext.Provider value={[todos,setTodos]}>\r\n        {props.children}\r\n      </DataContext.Provider>\r\n    \r\n  )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport { DataContext} from './DataProvider'\r\nexport default function FormInput() {\r\n  const [todos, setTodos] = useContext(DataContext)\r\n  const [todoName, setTodoName] = useState('')\r\n  //getting item from input adding it to todo list\r\n  const addTodo = e => {\r\n    e.preventDefault();\r\n    setTodos([...todos, { name: todoName, isCompleted: false }])\r\n    setTodoName('')\r\n  }\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={addTodo}>\r\n      <input type=\"text\" name=\"todos\" id=\"todos\" required   placeholder=\"What needs to be done?\"\r\n        value={todoName}\r\n        onChange={e => setTodoName(e.target.value.toLowerCase())} />\r\n      <button type=\"submit\">Create <i className=\"far fa-plus-square\"></i></button>\r\n    </form>\r\n  )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nexport default function ListItem({ todo, id, checkComplete,handleEditTodos}) {\r\n  const [onEdit, setOnEdit] = useState(false)\r\n  const [editValue, setEditValue]=useState(todo.name)\r\n  const handleOnEdit = () => {\r\n    setOnEdit(true)\r\n  }\r\n  const handleSave = (id) => {\r\n    setOnEdit(false)\r\n    if (editValue) {\r\n      //if inputfield has value\r\n      handleEditTodos(editValue,id)\r\n    } else {\r\n      setEditValue(todo.name)\r\n    }\r\n  }\r\n  if (onEdit) {\r\n    return (\r\n      <li>\r\n        {/* when click onEdit checkbox changes into input field */}\r\n        <input\r\n          type=\"text\"\r\n          id={id}\r\n          onChange={(e) => setEditValue(e.target.value.toLowerCase())}\r\n          name=\"editValue\"\r\n          value={editValue}\r\n        />\r\n          {todo.name}\r\n        <button onClick={()=>handleSave(id)}>Save <i className=\"far fa-edit\"></i></button>\r\n      </li>\r\n    )\r\n  } else {\r\n    return (\r\n      <li>\r\n        {/* if isCompleted has true then active will apply, it will cut the item */}\r\n        <label htmlFor={id} className={todo.isCompleted ? \"active\" : \"\"}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={id}\r\n            onChange={() => checkComplete(id)}\r\n            checked={todo.isCompleted}\r\n          />\r\n          {todo.name}\r\n        </label>\r\n        <button disabled={todo.isCompleted} onClick={handleOnEdit}>Edit <i className=\"far fa-edit\"></i></button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React,{useContext} from 'react'\r\nimport ListItem from './ListItem'\r\nimport { DataContext } from './DataProvider'\r\nexport default function List() {\r\n  const [todos, setTodos] = useContext(DataContext);\r\n  //id getting from ListItem componet\r\n  const switchComplete = (id) => {\r\n    //making exact copy of todo into newTodo\r\n    const newTodos = [...todos]\r\n    newTodos.forEach((element, i)=> {\r\n      if (i === id) {\r\n        element.isCompleted = !element.isCompleted\r\n      }\r\n    });\r\n    setTodos(newTodos)\r\n  }\r\n    const handleEditTodos = (editvalue, id) => {\r\n      const newTodos = [...todos]\r\n      newTodos.forEach((element, i)=> {\r\n        if (i === id) {\r\n          element.name=editvalue\r\n        }\r\n      })\r\n      setTodos(newTodos)\r\n  }\r\n  return (\r\n    <ul>\r\n      {\r\n        todos.map((todo, id) => {\r\n          return(\r\n          <ListItem\r\n            todo={todo}\r\n            id={id}\r\n            key={id}\r\n            checkComplete={switchComplete}\r\n            handleEditTodos={handleEditTodos}\r\n          />\r\n        )\r\n      })\r\n      }\r\n  </ul>\r\n  )\r\n}\r\n","import React,{useState,useEffect, useContext} from 'react'\r\nimport { DataContext } from './DataProvider'\r\nexport default function Footer() {\r\n  const [checkAll, setCheckAll] = useState(false)\r\n  const [todos, setTodos] = useContext(DataContext)\r\n  const handleCheckAll = () => {\r\n    const newTodos = [...todos]\r\n    newTodos.forEach(todo => {\r\n      todo.isCompleted=!checkAll\r\n    })\r\n    setTodos(newTodos)\r\n    setCheckAll(!checkAll)\r\n  }\r\n\r\n  const deleteTodo = () => {\r\n    const newTodos = todos.filter(todo => {\r\n      return todo.isCompleted===false\r\n    })\r\n    setTodos(newTodos)\r\n    setCheckAll(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {todos.length === 0 ? <h2>Congratulations! Nothing to do</h2>\r\n        :\r\n        <div className=\"row\">\r\n          <label htmlFor=\"all\">\r\n            <input type=\"checkbox\" name=\"all\" id=\"all\" onChange={handleCheckAll} />\r\n            All\r\n          </label>\r\n          <p>You have {todos.filter(todo=>todo.isCompleted===false).length} to do </p>\r\n          <button id=\"delete\" onClick={deleteTodo}>Delete <i class=\"far fa-trash-alt\"></i></button>\r\n        </div>}\r\n      </>\r\n    \r\n  )\r\n}\r\n","import React from 'react'\nimport FormInput from './components/FormInput'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport {DataProvider} from './components/DataProvider'\nfunction App() {\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        <h1>To Do List</h1>\n        <FormInput/>\n        <List/>\n        <Footer/>\n      </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}